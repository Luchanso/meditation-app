name: Run unit test's

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  units:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.JS
      uses: actions/setup-node@master

    ### --- cache start ---
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    ### --- cache finish ---
    - run: yarn install --frozen-lockfile
    - run: yarn jest --ci
  e2e:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v2
    - name: Use Node.JS
      uses: actions/setup-node@master
    ### --- cache start ---
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    ### --- cache finish ---
      # TODO: uncomment when build is will be successful
    # - run: brew tap wix/brew
    # - run: brew install applesimutils
    - run: yarn install --frozen-lockfile
    - run: pod install
      working-directory: ios

    - run: xcodebuild clean archive -workspace meditationapp.xcworkspace -scheme MeditationApp -archivePath MeditationApp.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
      working-directory: ios

    # - run: yarn detox build --configuration ios.sim.release
    # - run: yarn detox test  --configuration ios.sim.release --cleanup


